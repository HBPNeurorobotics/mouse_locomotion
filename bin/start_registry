#!/usr/bin/env bash

##
# Mouse Locomotion Simulation
#
# Human Brain Project SP10
#
# This project provides the user with a framework based on 3D simulators allowing:
#  - Edition of a 3D model
#  - Edition of a physical controller model (torque-based or muscle-based)
#  - Edition of a brain controller model (oscillator-based or neural network-based)
#  - Simulation of the model
#  - Optimization and Meta-optimization of the parameters in distributed cloud simulations
#
# File created by: Gabriel Urbain <gabriel.urbain@ugent.be>
#                  Dimitri Rodarie <d.rodarie@gmail.com>
# June 2016
##


# This script facilitates the start of a registry server on a remote computer behind a screen interface

WIPEP="screen -wipe"
QSIMP="screen -dmLS qsimr registry;"

##################################

echo "[START REGISTRY] ======== Check screen processes ======== "

qsimrtmp=($(screen -ls | grep qsimr))
if [ ! ${qsimrtmp} ]; then
	qsimrprocess="No process";
else
	qsimrprocess=${qsimrtmp[-1]};
fi
echo "[START REGISTRY] registry status:  ${qsimrprocess} "

##################################

printf "\n[START REGISTRY] ======== Start screen processes ======== \n"

if [ "${qsimrprocess}" == "(Detached)" ] || [ "${qsimrprocess}" == "(Attached)" ]; then
	echo "[START REGISTRY] registry: nothing to do!";
elif [ "${qsimrprocess}" == "???)" ]; then
	eval "${WIPEP}";
	eval "${QSIMP}";
else
	eval "${QSIMP}";
fi

##################################

printf "\n[START REGISTRY] ======== Check screen processes ======== \n"

qsimrtmp=($(screen -ls | grep qsimr))
if [ ! ${qsimrtmp} ]; then
	qsimrprocess="No process";
else
	qsimrprocess=${qsimrtmp[-1]};
fi

echo "[START REGISTRY] registry status:  ${qsimrprocess} "