#!/usr/bin/env bash

##
# Mouse Locomotion Simulation
#
# Human Brain Project SP10
#
# This project provides the user with a framework based on 3D simulators allowing:
#  - Edition of a 3D model
#  - Edition of a physical controller model (torque-based or muscle-based)
#  - Edition of a brain controller model (oscillator-based or neural network-based)
#  - Simulation of the model
#  - Optimization and Meta-optimization of the parameters in distributed cloud simulations
#
# File created by: Gabriel Urbain <gabriel.urbain@ugent.be>
#                  Dimitri Rodarie <d.rodarie@gmail.com>
# June 2016
##


# This script facilitates the stop of a server on a remote computer behind a screen interface

XVFBP="screen -S xvfb -p 0 -X stuff $'\003'"
WIPEP="screen -wipe"
QSIMP="screen -S qsims -p 0 -X stuff $'\003'"

##################################

echo "[STOP SERVER] ======== Check screen processes ======== "

xvfbtmp=($(screen -ls | grep xvfb))
if [ ! ${xvfbtmp} ]; then
	xvfbprocess="No process";
else
	xvfbprocess=${xvfbtmp[-1]};
fi
qsimstmp=($(screen -ls | grep qsims))
if [ ! ${qsimstmp} ]; then
	qsimsprocess="No process";
else
	qsimsprocess=${qsimstmp[-1]};
fi
echo "[STOP SERVER] XVFB status:  ${xvfbprocess} "
echo "[STOP SERVER] server status:  ${qsimsprocess} "

##################################

printf "\n[STOP SERVER] ======== Stop screen processes ======== \n"

if [ "${xvfbprocess}" == "???)" ]; then
	eval "${WIPEP}";
elif [ "${xvfbprocess}" == "No process" ]; then
	echo "[STOP SERVER XVFB: Nothing to do!";
else
	echo "[STOP SERVER] XVFB: Stop the screen process!";
	eval "${XVFBP}";
fi

if [ "${qsimsprocess}" == "???)" ]; then
	eval "${WIPEP}";
elif [ "${qsimsprocess}" == "No process" ]; then
	echo "[STOP SERVER] server: Nothing to do!";
else
	echo "[STOP SERVER] server: Stop the screen process!";
	eval "${QSIMP}";
fi
sleep 1

##################################

printf "\n[STOP SERVER] ======== Check screen processes ======== \n"

xvfbtmp=($(screen -ls | grep xvfb))
if [ ! ${xvfbtmp} ]; then
	xvfbprocess="No process";
else
	xvfbprocess=${xvfbtmp[-1]};
fi
qsimstmp=($(screen -ls | grep qsims))
if [ ! ${qsimstmp} ]; then
	qsimsprocess="No process";
else
	qsimsprocess=${qsimstmp[-1]};
fi
echo "[STOP SERVER] XVFB status:  ${xvfbprocess} "
echo "[STOP SERVER] server status:  ${qsimsprocess} "